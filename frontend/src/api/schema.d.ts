/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/events': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getEvents']
    put?: never
    post: operations['postEvents']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/events/{eventID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getEvent']
    put?: never
    post?: never
    delete: operations['deleteEvent']
    options?: never
    head?: never
    patch: operations['patchEvent']
    trace?: never
  }
  '/events/{eventID}/attendance': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['postAttendance']
    delete: operations['deleteAttendance']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/events/{eventID}/lotteries': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getLotteries']
    put?: never
    post: operations['postLotteries']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/events/{eventID}/lotteries/{lotteryID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getLottery']
    put?: never
    post: operations['postLottery']
    delete: operations['deleteLottery']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    EventSummary: {
      /** Format: uuid */
      event_id: string
      title: string
      description: string
      /** Format: date */
      date: string
      is_open: boolean
      is_me_attendee: boolean
      admins: string[]
    }
    EventBase: {
      title: string
      description: string
      /** Format: date */
      date: string
      is_open: boolean
      is_me_attendee: boolean
      admins: string[]
      attendees: string[]
    }
    Event: components['schemas']['EventBase'] & {
      /** Format: uuid */
      event_id: string
      is_deleted: boolean
      /** Format: date-time */
      updated_at: string
      /** Format: date-time */
      created_at: string
    }
    Lottery: {
      /** Format: uuid */
      lottery_id: string
      /** Format: uuid */
      event_id: string
      title: string
      is_deleted: boolean
      /** Format: date-time */
      created_at: string
      /** Format: date-time */
      updated_at: string
      winners: string[]
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getEvents: {
    parameters: {
      query: {
        /** @description If include the deleted events */
        ifDeleted: boolean
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EventSummary'][]
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  postEvents: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EventBase']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: uuid */
            event_id?: string
          }
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getEvent: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Event']
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteEvent: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  patchEvent: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EventBase']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  postAttendance: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteAttendance: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLotteries: {
    parameters: {
      query: {
        /** @description If include the deleted lotteries */
        ifDeleted: boolean
      }
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Lottery'][]
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  postLotteries: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': {
          title: string
        }
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** Format: uuid */
            lottery_id?: string
          }
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLottery: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
        lotteryID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Lottery']
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  postLottery: {
    parameters: {
      query: {
        /** @description If allow duplicated winning in the same event */
        ifDuplicated: boolean
      }
      header?: never
      path: {
        eventID: string
        lotteryID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description traQ ID */
            winner?: string
          }
        }
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteLottery: {
    parameters: {
      query?: never
      header?: never
      path: {
        eventID: string
        lotteryID: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Internal Server Error */
      500: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
