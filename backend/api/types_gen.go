// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Event defines model for Event.
type Event struct {
	Admins      []string           `json:"admins"`
	Attendees   []string           `json:"attendees"`
	CreatedAt   time.Time          `json:"created_at"`
	Date        openapi_types.Date `json:"date"`
	Description *string            `json:"description,omitempty"`
	EventId     openapi_types.UUID `json:"event_id"`
	IsDelete    bool               `json:"is_delete"`
	IsMeAdmin   bool               `json:"is_me_admin"`
	IsOpen      bool               `json:"is_open"`
	Title       string             `json:"title"`
	UpdatedAt   time.Time          `json:"updated_at"`
}

// EventBase defines model for EventBase.
type EventBase struct {
	Admins      []string           `json:"admins"`
	Attendees   []string           `json:"attendees"`
	Date        openapi_types.Date `json:"date"`
	Description *string            `json:"description,omitempty"`
	EventId     openapi_types.UUID `json:"event_id"`
	IsMeAdmin   bool               `json:"is_me_admin"`
	IsOpen      bool               `json:"is_open"`
	Title       string             `json:"title"`
}

// EventSummary defines model for EventSummary.
type EventSummary struct {
	Date        openapi_types.Date `json:"date"`
	Description *string            `json:"description,omitempty"`
	EventId     openapi_types.UUID `json:"event_id"`
	IsMeAdmin   bool               `json:"is_me_admin"`
	IsOpen      bool               `json:"is_open"`
	Title       string             `json:"title"`
}

// EventUpdate defines model for EventUpdate.
type EventUpdate struct {
	Admins      []string           `json:"admins"`
	Attendees   []string           `json:"attendees"`
	Date        openapi_types.Date `json:"date"`
	Description *string            `json:"description,omitempty"`
	EventId     openapi_types.UUID `json:"event_id"`
	IsDelete    bool               `json:"is_delete"`
	IsMeAdmin   bool               `json:"is_me_admin"`
	IsOpen      bool               `json:"is_open"`
	Title       string             `json:"title"`
}

// Lottery defines model for Lottery.
type Lottery struct {
	CreatedAt time.Time          `json:"created_at"`
	EventId   openapi_types.UUID `json:"event_id"`
	IsDelete  bool               `json:"is_delete"`
	LotteryId openapi_types.UUID `json:"lottery_id"`
	Title     string             `json:"title"`
	UpdatedAt time.Time          `json:"updated_at"`
	Winners   []string           `json:"winners"`
}

// GetEventsParams defines parameters for GetEvents.
type GetEventsParams struct {
	// IsDelete If include the deleted events
	IsDelete *bool `form:"is_delete,omitempty" json:"is_delete,omitempty"`
}

// PostEventsJSONRequestBody defines body for PostEvents for application/json ContentType.
type PostEventsJSONRequestBody = EventBase

// PatchEventJSONRequestBody defines body for PatchEvent for application/json ContentType.
type PatchEventJSONRequestBody = EventUpdate
